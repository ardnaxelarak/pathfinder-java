<project name="pathfinder-java" default="jar" basedir=".">
	<property name="src.path" value="src"/>
	<property name="build.path" value="build"/>
	<property name="build.classes.path" value="${build.path}/classes"/>
	<property name="build.src.path" value="${build.path}/src"/>
	<property name="parsing.path" value="parsing"/>
	<property name="parsing.build.path" value="${build.src.path}/pathfinder/parsing"/>
	<property name="lib.path" value="lib"/>
	<property name="img.path" value="images"/>

	<property name="antlr.jar" value="${lib.path}/antlr-4.4-complete.jar"/>
	<property name="version" value="0.0.0"/>
	<property name="jarname" value="pathfinder-java-${version}.jar"/>

	<property name="one-jar.dist.dir" value="/usr/local/lib/one-jar-ant"/>
	<import file="${one-jar.dist.dir}/one-jar-ant-task.xml" optional="true"/>

	<taskdef resource="checkstyletask.properties" classpath="${lib.path}/checkstyle-6.2-all.jar"/>

	<path id="project.classpath">
		<pathelement location="${src.path}"/>
		<fileset dir="${lib.path}" includes="*.jar"/>
	</path>

	<pathconvert property="manifest.classpath" pathsep=" ">
		<path refid="project.classpath"/>
		<mapper>
			<chainedmapper>
				<flattenmapper/>
				<globmapper from="*.jar" to="${lib.path}/*.jar"/>
			</chainedmapper>
		</mapper>
	</pathconvert>

	<target name="init">
		<tstamp/>
		<mkdir dir="${build.path}"/>
		<mkdir dir="${build.classes.path}"/>
		<available file="${build.src.path}" type="dir" property="build.src.path.present"/>
		<mkdir dir="${build.src.path}"/>
	</target>

	<target name="generate.check">
		<property name="parsing.build.path.absolute" location="${parsing.build.path}"/>
		<uptodate property="generate.notRequired">
			<srcfiles dir="${parsing.path}" includes="*.g4"/>
			<chainedmapper>
				<flattenmapper/>
				<globmapper from="*" to="${parsing.build.path.absolute}/*"/>
				<mapper>
					<globmapper from="*.g4" to="*BaseListener.java"/>
					<globmapper from="*.g4" to="*Lexer.java"/>
					<globmapper from="*.g4" to="*Lexer.tokens"/>
					<globmapper from="*.g4" to="*Listener.java"/>
					<globmapper from="*.g4" to="*Parser.java"/>
					<globmapper from="*.g4" to="*.tokens"/>
				</mapper>
			</chainedmapper>
		</uptodate>
	</target>

	<target name="generate" depends="init,generate.check" unless="generate.notRequired">
		<fileset dir="${parsing.path}" includes="*.g4" id="g4.files"/>
		<resourcecount property="g4.files.count" refid="g4.files"/>
		<echo>Generating ${g4.files.count} source files to ${parsing.build.path.absolute}</echo>
		<pathconvert property="parsing.files" refid="g4.files" pathsep=" "/>

		<java jar="${antlr.jar}" fork="true">
			<arg line="${parsing.files}"/>
			<arg value="-o"/>
			<arg path="${parsing.build.path}"/>
		</java>
	</target>

	<target name="check">
		<checkstyle config="checks.xml">
			<fileset dir="${src.path}" includes="**/*.java"/>
		</checkstyle>
	</target>

	<target name="compile" depends="generate, check">
		<javac includeantruntime="false" debug="true" destdir="${build.classes.path}">
			<compilerarg value="-Xlint:unchecked"/>
			<src path="${src.path}"/>
			<src path="${build.src.path}"/>
			<classpath refid="project.classpath"/>
		</javac>
	</target>

	<target name="clean">
		<delete dir="${build.path}"/>
	</target>

	<target name="jar" depends="compile">
		<jar basedir="${build.classes.path}" destfile="${jarname}">
			<manifest>
				<attribute name="Built-By" value="${builder}" />
				<attribute name="Built-On" value="${build-info.current-date}" />
				<attribute name="Built-At" value="${build-info.current-time}" />
				<attribute name="Main-Class" value="pathfinder.Main"/>
				<attribute name="Class-Path" value="${manifest.classpath}"/>
			</manifest>
		</jar>
	</target>

	<target name="one-jar" depends="jar">
		<one-jar destfile="${build.path}/artnav-onejar.jar">
			<manifest>
				<attribute name="Built-By" value="${builder}" />
				<attribute name="Built-On" value="${build-info.current-date}" />
				<attribute name="Built-At" value="${build-info.current-time}" />
				<attribute name="Main-Class" value="pathfinder.Main"/>
			</manifest>
			<main jar="${jarname}"/>
			<lib>
				<fileset dir="${lib.path}" includes="*.jar"/>
			</lib>
			<binlib>
				<fileset dir="${lib.path}" includes="*.so"/>
			</binlib>
			<fileset dir="${img.path}" includes="*.png"/>
		</one-jar>
	</target>
</project>
